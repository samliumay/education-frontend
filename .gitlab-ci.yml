stages:
  - prepare
  - test
  - build
  - deploy

prepare:
  image: node:16
  stage: prepare
  script:
    - npm install
  tags:
    - docker
  cache:
    untracked: true
    paths:
      - node_modules
  artifacts:
    expire_in: 1 hour
    when: always
    untracked: true
    paths:
      - node_modules
      - package-lock.json

# lint:
#   image: node:16
#   stage: test
#   tags:
#     - docker
#   dependencies:
#     - prepare
#   script:
#     - npm run lint

# format:
#   image: node:16
#   stage: test
#   tags:
#     - docker
#   dependencies:
#     - prepare
#   script:
#     - npm run format:check

build:
  image: node:16
  stage: test
  dependencies:
    - prepare
  tags:
    - docker
  script:
    - npm run build

Build Dev:
  stage: build
  image: atnartur/docker:latest
  only:
    - dev
  tags:
  - docker
  script:
    - docker-compose -f docker-compose.prod.yml build
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -f docker-compose.prod.yml push

Deploy Dev:
  stage: deploy
  image: atnartur/docker:latest
  only:
    - dev
  tags:
    - docker-compose
    - dev
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -f docker-compose.prod.yml pull
    - docker-compose -f docker-compose.prod.yml up -d


Build Prod:
  stage: build
  image: atnartur/docker:latest
  only:
    - main
  tags:
    - docker
  script:
    - docker-compose -f docker-compose.prod.yml build
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -f docker-compose.prod.yml push

Deploy Prod:
  stage: deploy
  image: atnartur/docker:latest
  only:
    - main
  tags:
    - docker-compose
    - prod
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -f docker-compose.prod.yml pull
    - docker-compose -f docker-compose.prod.yml up -d
